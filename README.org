#+TITLE:     README - khalorg
#+AUTHOR:    BartSte
#+DATE:      2023-01-11

* Introduction
  ~khalorg~ is a command line tool that converts agenda items of org mode
  into khal calendar items, and vice versa.  

  Warning: this program is still experimental, under development, and open for
  change. Before use, make sure you make a back-up of your calendar. Check the
  requirements for the features that are currently finished and under
  development. 

** Definitions
   - CalDav -> internet standard for client access to calendars [[https://en.wikipedia.org/wiki/CalDAV]]
   - Davmail -> CalDav exchange gateway [[https://davmail.sourceforge.net/e]]
   - emacs -> text editor [[https://www.gnu.org/software/emacs/]]
   - khal -> command line calendar app [[https://github.com/pimutils/khal]]
   - khalel -> interface between emacs and khal [[https://gitlab.com/hperrey/khalel]]
   - neovim -> text editor [[https://neovim.io/]]
   - nvim-orgmode -> org mode for neovim [[https://github.com/nvim-orgmode/orgmode]]
   - org -> plain text system for keeping notes, agendas and more. [[https://orgmode.org]]
   - vdirsyncer -> a command line tool for synchronizing calendars and 
     addressbooks between servers and the local file system. [[https://github.com/pimutils/vdirsyncer]]

** Motivation
   I use org mode to manage my agenda and my notes. However, in a professional
   setting, you are often required to use proprietary software for your agenda,
   like Office 365. Luckily, programs exist that can synchronize agendas from
   different sources, by implementing the CalDav standard. Personally, I like
   to use vdirsyncer for synchronization my agendas, and khal to access and
   manipulate the agena items. To bridge the gap between khal and org mode,
   only 1 program exists called: khalel. However, this program is designed for
   emacs. Since there are also org mode users outside of emacs (e.g. neovim),
   khalorg aims to be a general interface between khal and org mode.

   Based on the above, the following workflow is desired:
   # CalDav server -> vdirsyncer
   # vdirsyncer -> khal
   # khal -> khal-orgmode
   # khal-orgmode -> org mode
   #+begin_example
   ┌─────────────┐
   │CalDav server│
   └┬────────────┘
   ┌▽─────────┐   
   │vdirsyncer│   
   └┬─────────┘   
   ┌▽───┐         
   │khal│         
   └┬───┘         
   ┌▽───────────┐ 
   │khalorg│ 
   └┬───────────┘ 
   ┌▽───────┐     
   │org mode│     
   └────────┘     
   #+end_example

** Features
   - [X] Import vdirsyncer calendar into org.   
     It is possible to import calendar items from vdirsyncer into org. 
   - [X] Export a new org agenda item to vdirsyncer.  
     Org's export functionality is used to export a single org item to a
     vdirsyncer calendar. A heading and a plain timestamp are required for
     this export.
   - [ ] Edit an existing calendar item in vdirsyncer from org.  
     Imported org agenda items can be edited and exported so that the
     vdirsyncer items are updated instead of duplicated.              
   - [ ] Recurring items           
   - [ ] Import/Export ~SCHEDULED~ timestamps                
   - [ ] Import/Export ~DEADLINE~  timestamps                
   - [ ] Include timezones
   - [X] Can be used by org mode for emacs, vim and neovim.
   - [ ] Is available on PyPI.
   - [-] Neovim plugin.
   - [-] Include an Office 365 workflow.
   - [-] Systemd unit files for synchronizing Office 365 with org mode.

* Installation
  - For now, you need to clone this repository and run:
    #+begin_src bash
    pip install -r requirements.txt
    #+end_src
    Next, you can use the executable ~khalorg~ to import and export org agenda
    items. Checkout section [[Usage]] for more info.

* Usage
** Export: from khal to org
   Agenda items from khal can be converted to org items using the 
   ~khalorg export~ command. For examples:
   #+begin_src bash
   khalorg export my_calendar today 90d > my_calendar.org 
   #+end_src
   here, the khal agenda item of the calendar ~my_calendar~ are coverted to org
   mode format and written to a file called ~my_calendar.org~. The range is
   specified from ~today~ till ~90d~ (90 days) in the future. For more
   information about the allowed date formats, check the ~khal list~ command,
   which is used for this functionality. It is assumed that the khal calendar
   called "my_calendar" exists. Make sure "my_calendar" is a calendar that
   exists on your local file system.

** New: from org to khal
   An org agenda item can be converted to a new khal agenda item by feeding the
   org item through stdin to ~khalorg~ and specifying the khal calendar name as
   a positional argument. For example, the consider the org item below, which
   is saved as ~meeting.org~.
   #+begin_example
   * Meeting                                                            :LABEL:
   <2023-01-01 Sun 01:00-02:00>
   :PROPERTIES:
   :ID: 123
   :LOCATION: Somewhere
   :ORGANIZER: Someone (someone@outlook.com)
   :URL: www.test.com
   :END:
   Hello,

   Lets have a meeting.

   Regards,


   Someone
   #+end_example
   This item can be converted to the khal calendar called "my_calendar" as follows:
   #+begin_src bash
   cat meeting.org | khalorg new my_calendar
   #+end_src
   It is assumed that the khal calendar called "my_calendar" exists. Make sure
   "my_calendar" is a calendar that exists on your local file system.

** Neovim plugin
   Check my dotfiles at: 
   - [[https://github.com/BartSte/dotfiles/blob/master/dotfiles/nvim/lua/khal-export.lua]]
   for capturing org agenda items from Neovim and feeding them to khalorg.
   Next, you can connect these functions to ~nvim-orgmode~ by checking out:
   - [[https://github.com/BartSte/dotfiles/blob/master/dotfiles/nvim/lua/conf-orgmode.lua]]

* Workflow for Office 365
  # Office 365 -> Davmail
  # Davmail -> vdirsyncer
  # vdirsyncer -> khal
  # khal -> khal-orgmode
  # khal-orgmode -> org mode
  #+begin_example
  ┌──────────┐  
  │Office 365│  
  └┬─────────┘  
  ┌▽──────┐     
  │Davmail│     
  └┬──────┘     
  ┌▽─────────┐  
  │vdirsyncer│  
  └┬─────────┘  
  ┌▽───┐        
  │khal│        
  └┬───┘        
  ┌▽───────────┐
  │khalorg│
  └┬───────────┘
  ┌▽───────┐    
  │org mode│    
  └────────┘    
  #+end_example

* Bugs:
  - [ ] Timestamp visible in body after ~khalorg new~ command results in duplication in org agenda.
  - [ ] Org item not recognized by neovim plugin when no blank line is present at the bottom.
        
* Improvements:
  - [ ] Running Khal commands directly from a script in not straightforward.
    Therefore, khal is executed as a subprocess, launching a new interpreter.
